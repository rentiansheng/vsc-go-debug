{
  "name": "go-debug-pro",
  "displayName": "Go Debug Pro",
  "description": "Professional Go debugging extension with visual configuration editor, conditional breakpoints, and advanced debugging features",
  "version": "0.0.1",
  "publisher": "your-publisher-name",
  "author": {
    "name": "Your Name",
    "email": "your.email@example.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/go-debug-pro.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/go-debug-pro/issues"
  },
  "homepage": "https://github.com/your-username/go-debug-pro#readme",
  "license": "MIT",
  "keywords": [
    "go",
    "golang",
    "debug",
    "debugger",
    "delve",
    "conditional breakpoint",
    "watch expression",
    "visual editor"
  ],
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Debuggers",
    "Programming Languages"
  ],
  "activationEvents": [
    "*",
    "onLanguage:go",
    "onDebugResolve:go-debug-pro",
    "onDebug",
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "goDebugPro.testActivation",
        "title": "Test Go Debug Pro Activation",
        "category": "Go Debug Pro"
      },
      {
        "command": "goDebugPro.toggleConditionalBreakpoint",
        "title": "Toggle Conditional Breakpoint",
        "icon": "$(debug-breakpoint-conditional)"
      },
      {
        "command": "goDebugPro.refreshConfigs",
        "title": "Refresh Debug Configurations",
        "icon": "$(refresh)"
      },
      {
        "command": "goDebugPro.createNewConfig",
        "title": "Create New Debug Configuration",
        "icon": "$(add)"
      },
      {
        "command": "goDebugPro.refreshRunConfigs",
        "title": "Refresh Run Configurations",
        "icon": "$(refresh)"
      },
      {
        "command": "goDebugPro.createNewRunConfig",
        "title": "Create New Run Configuration",
        "icon": "$(add)"
      },
      {
        "command": "goDebugPro.showRunConfigDetails",
        "title": "Show Run Configuration Details",
        "icon": "$(info)"
      },
      {
        "command": "goDebugPro.editRunConfiguration",
        "title": "Edit Run Configuration",
        "icon": "$(edit)"
      },
      {
        "command": "goDebugPro.duplicateRunConfiguration",
        "title": "Duplicate Run Configuration",
        "icon": "$(copy)"
      },
      {
        "command": "goDebugPro.deleteRunConfiguration",
        "title": "Delete Run Configuration",
        "icon": "$(trash)"
      },
      {
        "command": "goDebugPro.runDebugConfiguration",
        "title": "Run Debug Configuration",
        "icon": "$(play)"
      },
      {
        "command": "goDebugPro.createConfigurationWithEditor",
        "title": "Create Configuration (Visual Editor)",
        "category": "Go Debug Pro",
        "icon": "$(add)"
      },
      {
        "command": "goDebugPro.editConfigurationWithEditor",
        "title": "Edit Configuration (Visual Editor)",
        "icon": "$(edit)"
      },
      {
        "command": "goDebugPro.createConfigurationFromProvider",
        "title": "Quick Create Configuration",
        "icon": "$(plus)"
      },
      {
        "command": "goDebugPro.refreshQuickConfigs",
        "title": "Refresh Quick Configurations",
        "icon": "$(refresh)"
      },
      {
        "command": "goDebugPro.runDebugFromQuick",
        "title": "Run Debug Configuration",
        "icon": "$(play)"
      },
      {
        "command": "goDebugPro.editConfigFromQuick",
        "title": "Edit Configuration",
        "icon": "$(edit)"
      },
      {
        "command": "goDebugPro.debugCurrentFile",
        "title": "Debug",
        "icon": "$(debug-alt)"
      },
      {
        "command": "goDebugPro.runCurrentFile",
        "title": "Run",
        "icon": "$(play)"
      },
      {
        "command": "goDebugPro.createConfigForCurrentFile",
        "title": "Create Custom Configuration for This File",
        "icon": "$(add)"
      },
      {
        "command": "goDebugPro.runDebugConfig",
        "title": "Run",
        "icon": "$(play)"
      },
      {
        "command": "goDebugPro.debugConfig",
        "title": "Debug",
        "icon": "$(debug-alt)"
      },
      {
        "command": "goDebugPro.restartRunConfig",
        "title": "Restart Run",
        "icon": "$(debug-restart)"
      },
      {
        "command": "goDebugPro.restartDebugConfig",
        "title": "Restart Debug",
        "icon": "$(debug-restart)"
      },
      {
        "command": "goDebugPro.terminateConfig",
        "title": "Terminate",
        "icon": "$(debug-stop)"
      },
      {
        "command": "goDebugPro.duplicateConfig",
        "title": "Duplicate Configuration",
        "icon": "$(copy)"
      },
      {
        "command": "goDebugPro.deleteConfig",
        "title": "Delete Configuration",
        "icon": "$(trash)"
      },
      {
        "command": "goDebugPro.copyGoDebugOutput",
        "title": "Copy Go Debug Output",
        "icon": "$(copy)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "goDebugPro.toggleConditionalBreakpoint",
          "when": "resourceExtname == .go && debuggersAvailable",
          "group": "debug"
        },
        {
          "command": "goDebugPro.debugCurrentFile",
          "when": "resourceExtname == .go && resourceFilename =~ /main\\.go$/",
          "group": "goDebugPro@1"
        },
        {
          "command": "goDebugPro.runCurrentFile",
          "when": "resourceExtname == .go && resourceFilename =~ /main\\.go$/",
          "group": "goDebugPro@2"
        },
        {
          "command": "goDebugPro.createConfigForCurrentFile",
          "when": "resourceExtname == .go && resourceFilename =~ /main\\.go$/",
          "group": "goDebugPro@3"
        }
      ],
      "view/title": [
        {
          "command": "goDebugPro.createNewConfig",
          "when": "view == goDebugProConfigs",
          "group": "navigation"
        },
        {
          "command": "goDebugPro.refreshConfigs",
          "when": "view == goDebugProConfigs",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "goDebugPro.runDebugConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfig",
          "group": "inline@1"
        },
        {
          "command": "goDebugPro.debugConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfig",
          "group": "inline@2"
        },
        {
          "command": "goDebugPro.editConfigurationWithEditor",
          "when": "view == goDebugProConfigs && viewItem == debugConfig",
          "group": "1_actions@1"
        },
        {
          "command": "goDebugPro.runDebugConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfig",
          "group": "1_actions@2"
        },
        {
          "command": "goDebugPro.debugConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfig",
          "group": "1_actions@3"
        },
        {
          "command": "goDebugPro.duplicateConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfig",
          "group": "2_manage@1"
        },
        {
          "command": "goDebugPro.deleteConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfig",
          "group": "2_manage@2"
        },
        {
          "command": "goDebugPro.restartRunConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfigRunning",
          "group": "inline@1"
        },
        {
          "command": "goDebugPro.restartDebugConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfigRunning",
          "group": "inline@2"
        },
        {
          "command": "goDebugPro.terminateConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfigRunning",
          "group": "inline@3"
        },
        {
          "command": "goDebugPro.restartRunConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfigRunning",
          "group": "1_actions@1"
        },
        {
          "command": "goDebugPro.restartDebugConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfigRunning",
          "group": "1_actions@2"
        },
        {
          "command": "goDebugPro.terminateConfig",
          "when": "view == goDebugProConfigs && viewItem == debugConfigRunning",
          "group": "1_actions@3"
        },
        {
          "command": "goDebugPro.editConfigurationWithEditor",
          "when": "view == goDebugProConfigs && viewItem == debugConfigRunning",
          "group": "1_actions@4"
        },
        {
          "command": "goDebugPro.runDebugConfiguration",
          "when": "view == goDebugProRunConfigs && viewItem == runConfig",
          "group": "inline@1"
        },
        {
          "command": "goDebugPro.runDebugConfiguration",
          "when": "view == goDebugProRunConfigs && viewItem == runConfig",
          "group": "1_actions@1"
        },
        {
          "command": "goDebugPro.editRunConfiguration",
          "when": "view == goDebugProRunConfigs && viewItem == runConfig",
          "group": "1_actions@2"
        },
        {
          "command": "goDebugPro.duplicateRunConfiguration",
          "when": "view == goDebugProRunConfigs && viewItem == runConfig",
          "group": "2_manage@1"
        },
        {
          "command": "goDebugPro.deleteRunConfiguration",
          "when": "view == goDebugProRunConfigs && viewItem == runConfig",
          "group": "2_manage@2"
        },
        {
          "command": "goDebugPro.editConfigFromQuick",
          "when": "view == goDebugProQuickConfigs && viewItem == quickConfig",
          "group": "1_actions@1"
        }
      ],
      "debug/configuration": [
        {
          "command": "goDebugPro.duplicateConfig",
          "when": "debugConfigurationType == 'go-debug-pro'",
          "group": "1_modification@1"
        },
        {
          "command": "goDebugPro.deleteConfig",
          "when": "debugConfigurationType == 'go-debug-pro'",
          "group": "1_modification@2"
        }
      ],
      "debug/variables/context": [
        {
          "command": "goDebugPro.addWatchExpression",
          "when": "debugType == 'go-debug-pro'"
        }
      ],
      "output/context": [
        {
          "command": "goDebugPro.copyGoDebugOutput",
          "when": "resourceFilename == 'Go Debug Pro'",
          "group": "navigation"
        }
      ]
    },
    "debuggers": [
      {
        "type": "go-debug-pro",
        "label": "Go Debug Pro",
        "languages": [
          "go"
        ],
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Path to the Go program to debug"
              },
              "args": {
                "type": "array",
                "description": "Command line arguments passed to the program",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "cwd": {
                "type": "string",
                "description": "Workspace relative or absolute path to the working directory of the program being debugged",
                "default": "${workspaceFolder}"
              },
              "env": {
                "type": "object",
                "description": "Environment variables passed to the program",
                "default": {}
              },
              "showLog": {
                "type": "boolean",
                "description": "Show log output",
                "default": false
              },
              "logOutput": {
                "type": "string",
                "enum": [
                  "console",
                  "rpc",
                  "dap"
                ],
                "description": "Configure log output",
                "default": "console"
              }
            }
          },
          "attach": {
            "required": [
              "processId"
            ],
            "properties": {
              "processId": {
                "type": "string",
                "description": "ID of process to attach to"
              },
              "mode": {
                "type": "string",
                "enum": [
                  "local",
                  "remote"
                ],
                "description": "Attach mode",
                "default": "local"
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "name": "Launch Go Program",
            "type": "go-debug-pro",
            "request": "launch",
            "program": "${workspaceFolder}/main.go",
            "cwd": "${workspaceFolder}",
            "env": {},
            "args": []
          }
        ]
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Go Debug Pro Configuration",
      "properties": {
        "goDebugPro.telemetryEnabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable telemetry data collection"
        },
        "goDebugPro.suppressWarnings": {
          "type": "boolean",
          "default": true,
          "description": "Suppress non-critical deprecation warnings"
        },
        "goDebugPro.networkTimeout": {
          "type": "number",
          "default": 5000,
          "description": "Network timeout in milliseconds for external requests"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "goDebugPro",
          "title": "Go Debug Pro",
          "icon": "$(debug-alt)"
        }
      ],
      "panel": [
        {
          "id": "goDebugPanel",
          "title": "Go Debug",
          "icon": "$(debug-alt)"
        }
      ]
    },
    "views": {
      "goDebugPro": [
        {
          "id": "goDebugProConfigs",
          "name": "Debug Configurations",
          "icon": "$(settings-gear)",
          "contextualTitle": "Go Debug Pro Configurations"
        },
        {
          "id": "goDebugProRunConfigs",
          "name": "Run Configurations",
          "icon": "$(play)",
          "contextualTitle": "Go Debug Pro Run Configurations"
        }
      ],
      "goDebugPanel": [
        {
          "id": "goDebugOutput",
          "name": "Go Debug Output",
          "type": "webview",
          "icon": "$(output)",
          "contextualTitle": "Go Debug Pro Output"
        }
      ]
    },
    "keybindings": [
      {
        "command": "goDebugPro.toggleConditionalBreakpoint",
        "key": "ctrl+shift+f9",
        "mac": "cmd+shift+f9",
        "when": "resourceExtname == .go"
      },
      {
        "command": "goDebugPro.refreshWatch",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "debugType == 'go-debug-pro'"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "NODE_OPTIONS='--no-deprecation --disable-warning=ExperimentalWarning' vscode-test",
    "start": "NODE_OPTIONS='--no-deprecation --disable-warning=ExperimentalWarning' code .",
    "dev": "NODE_OPTIONS='--no-deprecation --disable-warning=ExperimentalWarning' npm run watch"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.32.0",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "@vscode/codicons": "^0.0.40",
    "@vscode/debugadapter": "^1.68.0",
    "@vscode/debugprotocol": "^1.68.0",
    "json-rpc2": "^2.0.0",
    "tree-kill": "^1.2.2",
    "vscode-debugadapter": "^1.51.0",
    "vscode-debugprotocol": "^1.51.0"
  }
}
